# -*- mode: ruby -*-
# vi: set ft=ruby :

servers = [
    {
        :name => "swarm-3",
        :type => "master",
        :box => "bento/ubuntu-18.04",
        :eth1 => "10.11.1.73",
        :port => "8083",
        :mem => "2048",
        :cpu => "2"
    },
    {
        :name => "swarm-2",
        :type => "node",
        :box => "bento/ubuntu-18.04",
        :eth1 => "10.11.1.72",
        :port => "8082",
        :mem => "2048",
        :cpu => "2"
    },
    {
        :name => "swarm-1",
        :type => "node",
        :box => "bento/ubuntu-18.04",
        :eth1 => "10.11.1.71",
        :port => "8081",
        :mem => "2048",
        :cpu => "2"
    },
    {
        :name => "dev",
        :type => "dev",
        :box => "bento/ubuntu-18.04",
        :eth1 => "10.11.1.81",
        :port => "8089",
        :mem => "1024",
        :cpu => "2"
    }
]

VAGRANTFILE_API_VERSION = "2"

$image_version = "bento/ubuntu-18.04" # compatibile anche con "bento/ubuntu-16.04"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

    # Configurazioni comuni.

    # Ubuntu 18.04 LTS 64 bit VirtualBox (Bento)
    config.vm.box = $image_version
    # config.vm.box_url = "https://app.vagrantup.com/bento/boxes/ubuntu-18.04"

    # folder per i progetti Asw (/home/asw/projects)
    config.vm.synced_folder "../../projects/", "/home/asw/projects", :mount_options => ["dmode=777", "fmode=777"]

    # folder per le risorse condivise per gli ambienti Asw (/home/asw/_shared/resources e /home/asw/_shared/scripts) 
    config.vm.synced_folder "../_shared/", "/home/asw/_shared", :mount_options => ["dmode=777", "fmode=777"]

    # folder per i dati condivisi per gli ambienti Asw (/home/asw/data) 
	# usato per un volume per il registry swarm 
    config.vm.synced_folder "../../data/", "/home/asw/data", :mount_options => ["dmode=777", "fmode=777"]

    servers.each do |opts|
        config.vm.define opts[:name] do |config|

            config.vm.box = opts[:box]
            # config.vm.box_version = opts[:box_version]
            config.vm.hostname = opts[:name]
            config.vm.network :private_network, ip: opts[:eth1], virtualbox__intnet: true

            config.vm.provider "virtualbox" do |v|

                v.name = opts[:name]
                v.customize ["modifyvm", :id, "--memory", opts[:mem]]
                v.customize ["modifyvm", :id, "--cpus", opts[:cpu]]

            end

            config.vm.network "forwarded_port", guest: 22, host: 2211, id: 'ssh', auto_correct: true
            config.ssh.forward_agent = true
            
            config.vm.network "forwarded_port", guest: 8080, host: opts[:port], id: 'http', auto_correct: true

            config.vm.provision :shell, path: "../_shared/scripts/set-env-variables.sh", args: ["10.11.1.70", "my-registry", "my-swarm", "swarm-", 3]

            
            if opts[:type] == "master"
                 # questi devono essere avviati soltanto dal primo nodo
                 config.vm.provision :shell, path: "../_shared/scripts/create-registry-certs.sh"
            end

            config.vm.provision :shell, path: "../_shared/scripts/copy-ssl-client-certs-for-registry.sh"

            if opts[:type] != "dev"
                config.vm.provision :shell, path: "../_shared/scripts/copy-ssl-registry-certs.sh"
            else
                config.vm.provision :shell, path: "../_shared/scripts/setup-java-repaired.sh"
                config.vm.provision :shell, path: "../_shared/scripts/setup-gradle-repaired.sh"
                config.vm.provision :shell, path: "../_shared/scripts/setup-maven.sh"

                config.vm.provision :shell, :inline => 'ln -s /home/asw/projects projects'
            end

            config.vm.provision :shell, path: "../_shared/scripts/setup-docker-secure-registry.sh"
            config.vm.provision :shell, path: "../_shared/scripts/setup-docker-compose.sh"
            config.vm.provision :shell, path: "../_shared/scripts/setup-swarm-hosts.sh"

            if opts[:type] == "master"
                config.vm.provision :shell, path: "../_shared/scripts/create-htpasswd-file.sh"
            end
                
            config.vm.provision :shell, path: "../_shared/scripts/setup-kubernetes-box.sh"

            if opts[:type] == "master"
                config.vm.provision :shell, path: "../_shared/scripts/setup-kubernetes-master.sh"

            elsif opts[:type] == "dev"
                config.vm.provision :shell, path: "../_shared/scripts/setup-kubernetes-dev.sh"
            else
                config.vm.provision :shell, path: "../_shared/scripts/setup-kubernetes-node.sh"
            end

            if opts[:name] == "swarm-1"
                config.vm.provision :shell, path: "../_shared/scripts/start-registry-service.sh"
            end
        end

    end

end 